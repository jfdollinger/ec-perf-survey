%!PS-Adobe-2.0 EPSF-2.0
%%Title: output.eps
%%Creator: gnuplot 5.4 patchlevel 2
%%CreationDate: Thu Jun  8 10:56:41 2023
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (output.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.4 patchlevel 2)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Jun  8 10:56:41 2023)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PL PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 120 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
876 384 M
63 0 V
6044 0 R
-63 0 V
stroke
804 384 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MRshow
/Helvetica findfont 120 scalefont setfont
/vshift -40 def
1.000 UL
LTb
LCb setrgbcolor
876 888 M
63 0 V
6044 0 R
-63 0 V
stroke
804 888 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 2x10)]
[(Helvetica) 96.0 60.0 true true 0 (7)]
] -52.0 MRshow
/Helvetica findfont 120 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
876 1392 M
63 0 V
6044 0 R
-63 0 V
stroke
804 1392 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 4x10)]
[(Helvetica) 96.0 60.0 true true 0 (7)]
] -52.0 MRshow
/Helvetica findfont 120 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
876 1896 M
63 0 V
6044 0 R
-63 0 V
stroke
804 1896 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 6x10)]
[(Helvetica) 96.0 60.0 true true 0 (7)]
] -52.0 MRshow
/Helvetica findfont 120 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
876 2400 M
63 0 V
6044 0 R
-63 0 V
stroke
804 2400 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 8x10)]
[(Helvetica) 96.0 60.0 true true 0 (7)]
] -52.0 MRshow
/Helvetica findfont 120 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
876 2903 M
63 0 V
6044 0 R
-63 0 V
stroke
804 2903 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1x10)]
[(Helvetica) 96.0 60.0 true true 0 (8)]
] -52.0 MRshow
/Helvetica findfont 120 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
876 3407 M
63 0 V
6044 0 R
-63 0 V
stroke
804 3407 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1.2x10)]
[(Helvetica) 96.0 60.0 true true 0 (8)]
] -52.0 MRshow
/Helvetica findfont 120 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
876 3911 M
63 0 V
6044 0 R
-63 0 V
stroke
804 3911 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1.4x10)]
[(Helvetica) 96.0 60.0 true true 0 (8)]
] -52.0 MRshow
/Helvetica findfont 120 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
876 4415 M
63 0 V
6044 0 R
-63 0 V
stroke
804 4415 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1.6x10)]
[(Helvetica) 96.0 60.0 true true 0 (8)]
] -52.0 MRshow
/Helvetica findfont 120 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
876 4919 M
63 0 V
6044 0 R
-63 0 V
stroke
804 4919 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1.8x10)]
[(Helvetica) 96.0 60.0 true true 0 (8)]
] -52.0 MRshow
/Helvetica findfont 120 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
876 384 M
0 63 V
0 4472 R
0 -63 V
stroke
876 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MCshow
/Helvetica findfont 120 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1748 384 M
0 63 V
0 4472 R
0 -63 V
stroke
1748 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 500)]
] -40.0 MCshow
/Helvetica findfont 120 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2621 384 M
0 63 V
0 4472 R
0 -63 V
stroke
2621 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1000)]
] -40.0 MCshow
/Helvetica findfont 120 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3493 384 M
0 63 V
0 4472 R
0 -63 V
stroke
3493 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1500)]
] -40.0 MCshow
/Helvetica findfont 120 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4366 384 M
0 63 V
0 4472 R
0 -63 V
stroke
4366 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 2000)]
] -40.0 MCshow
/Helvetica findfont 120 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5238 384 M
0 63 V
0 4472 R
0 -63 V
stroke
5238 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 2500)]
] -40.0 MCshow
/Helvetica findfont 120 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6111 384 M
0 63 V
0 4472 R
0 -63 V
stroke
6111 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 3000)]
] -40.0 MCshow
/Helvetica findfont 120 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6983 384 M
0 63 V
0 4472 R
0 -63 V
stroke
6983 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 3500)]
] -40.0 MCshow
/Helvetica findfont 120 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
876 4919 N
876 384 L
6107 0 V
0 4535 V
-6107 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
114 2651 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Execution time \(ms\))]
] -40.0 MCshow
grestore
/Helvetica findfont 120 scalefont setfont
LTb
LCb setrgbcolor
3929 84 M
[ [(Helvetica) 120.0 0.0 true true 0 (Problem size \(TMAX = NX = NY\))]
] -40.0 MCshow
/Helvetica findfont 120 scalefont setfont
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C
LCb setrgbcolor
2604 4796 M
[ [(Helvetica) 120.0 0.0 true true 0 (tile-size = 8x8x8)]
] -40.0 MRshow
/Helvetica findfont 120 scalefont setfont
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C
2676 4796 M
351 0 V
1050 384 M
88 0 V
87 1 V
87 0 V
87 1 V
88 2 V
87 1 V
87 1 V
87 4 V
88 2 V
87 4 V
87 6 V
87 5 V
88 8 V
87 4 V
87 17 V
87 9 V
88 14 V
87 1 V
174 40 V
175 34 V
174 50 V
175 29 V
174 81 V
175 50 V
174 134 V
175 40 V
174 134 V
175 22 V
174 186 V
175 52 V
174 467 V
175 -217 V
174 293 V
175 58 V
174 373 V
175 -30 V
174 859 V
175 -312 V
174 434 V
175 260 V
174 310 V
175 -32 V
174 863 V
1050 384 Pls
1138 384 Pls
1225 385 Pls
1312 385 Pls
1399 386 Pls
1487 388 Pls
1574 389 Pls
1661 390 Pls
1748 394 Pls
1836 396 Pls
1923 400 Pls
2010 406 Pls
2097 411 Pls
2185 419 Pls
2272 423 Pls
2359 440 Pls
2446 449 Pls
2534 463 Pls
2621 464 Pls
2795 504 Pls
2970 538 Pls
3144 588 Pls
3319 617 Pls
3493 698 Pls
3668 748 Pls
3842 882 Pls
4017 922 Pls
4191 1056 Pls
4366 1078 Pls
4540 1264 Pls
4715 1316 Pls
4889 1783 Pls
5064 1566 Pls
5238 1859 Pls
5413 1917 Pls
5587 2290 Pls
5762 2260 Pls
5936 3119 Pls
6111 2807 Pls
6285 3241 Pls
6460 3501 Pls
6634 3811 Pls
6809 3779 Pls
6983 4642 Pls
2851 4796 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C
LCb setrgbcolor
2604 4676 M
[ [(Helvetica) 120.0 0.0 true true 0 (tile-size = 16x16x16)]
] -40.0 MRshow
/Helvetica findfont 120 scalefont setfont
1.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C
2676 4676 M
351 0 V
1050 384 M
88 0 V
87 1 V
87 0 V
87 1 V
88 1 V
87 2 V
87 1 V
87 3 V
88 3 V
87 3 V
87 4 V
87 4 V
88 5 V
87 12 V
87 12 V
87 9 V
88 9 V
87 7 V
174 30 V
175 28 V
174 40 V
175 35 V
174 49 V
175 62 V
174 62 V
175 67 V
174 85 V
175 57 V
174 120 V
175 78 V
174 185 V
175 44 V
174 144 V
175 133 V
174 212 V
175 86 V
174 364 V
175 49 V
174 224 V
175 332 V
174 158 V
175 143 V
174 428 V
1050 384 Crs
1138 384 Crs
1225 385 Crs
1312 385 Crs
1399 386 Crs
1487 387 Crs
1574 389 Crs
1661 390 Crs
1748 393 Crs
1836 396 Crs
1923 399 Crs
2010 403 Crs
2097 407 Crs
2185 412 Crs
2272 424 Crs
2359 436 Crs
2446 445 Crs
2534 454 Crs
2621 461 Crs
2795 491 Crs
2970 519 Crs
3144 559 Crs
3319 594 Crs
3493 643 Crs
3668 705 Crs
3842 767 Crs
4017 834 Crs
4191 919 Crs
4366 976 Crs
4540 1096 Crs
4715 1174 Crs
4889 1359 Crs
5064 1403 Crs
5238 1547 Crs
5413 1680 Crs
5587 1892 Crs
5762 1978 Crs
5936 2342 Crs
6111 2391 Crs
6285 2615 Crs
6460 2947 Crs
6634 3105 Crs
6809 3248 Crs
6983 3676 Crs
2851 4676 Crs
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LTb
0.34 0.71 0.91 C
LCb setrgbcolor
2604 4556 M
[ [(Helvetica) 120.0 0.0 true true 0 (tile-size = 32x32x32)]
] -40.0 MRshow
/Helvetica findfont 120 scalefont setfont
1.000 UP
1.000 UL
LTb
0.34 0.71 0.91 C
2676 4556 M
351 0 V
1050 384 M
88 1 V
87 1 V
87 1 V
87 1 V
88 2 V
87 2 V
87 2 V
87 4 V
88 3 V
87 4 V
87 5 V
87 3 V
88 6 V
87 5 V
87 7 V
87 7 V
88 6 V
87 11 V
174 28 V
175 26 V
174 37 V
175 37 V
174 45 V
175 50 V
174 56 V
175 62 V
174 70 V
175 77 V
174 97 V
175 89 V
174 102 V
175 111 V
174 133 V
175 139 V
174 149 V
175 125 V
174 181 V
175 171 V
174 247 V
175 146 V
174 222 V
175 224 V
174 249 V
1050 384 Star
1138 385 Star
1225 386 Star
1312 387 Star
1399 388 Star
1487 390 Star
1574 392 Star
1661 394 Star
1748 398 Star
1836 401 Star
1923 405 Star
2010 410 Star
2097 413 Star
2185 419 Star
2272 424 Star
2359 431 Star
2446 438 Star
2534 444 Star
2621 455 Star
2795 483 Star
2970 509 Star
3144 546 Star
3319 583 Star
3493 628 Star
3668 678 Star
3842 734 Star
4017 796 Star
4191 866 Star
4366 943 Star
4540 1040 Star
4715 1129 Star
4889 1231 Star
5064 1342 Star
5238 1475 Star
5413 1614 Star
5587 1763 Star
5762 1888 Star
5936 2069 Star
6111 2240 Star
6285 2487 Star
6460 2633 Star
6634 2855 Star
6809 3079 Star
6983 3328 Star
2851 4556 Star
% End plot #3
% Begin plot #4
1.000 UP
1.000 UL
LTb
0.90 0.62 0.00 C
LCb setrgbcolor
2604 4436 M
[ [(Helvetica) 120.0 0.0 true true 0 (tile-size = 64x64x64)]
] -40.0 MRshow
/Helvetica findfont 120 scalefont setfont
1.000 UP
1.000 UL
LTb
0.90 0.62 0.00 C
2676 4436 M
351 0 V
1050 384 M
88 0 V
87 1 V
87 1 V
87 0 V
88 1 V
87 2 V
87 3 V
87 2 V
88 3 V
87 3 V
87 3 V
87 4 V
88 5 V
87 13 V
87 9 V
87 8 V
88 10 V
87 8 V
174 22 V
175 31 V
174 35 V
175 35 V
174 42 V
175 54 V
174 61 V
175 58 V
174 71 V
175 78 V
174 96 V
175 88 V
174 117 V
175 101 V
174 138 V
175 125 V
174 173 V
175 121 V
174 211 V
175 140 V
174 233 V
175 181 V
174 223 V
175 200 V
174 273 V
1050 384 Box
1138 384 Box
1225 385 Box
1312 386 Box
1399 386 Box
1487 387 Box
1574 389 Box
1661 392 Box
1748 394 Box
1836 397 Box
1923 400 Box
2010 403 Box
2097 407 Box
2185 412 Box
2272 425 Box
2359 434 Box
2446 442 Box
2534 452 Box
2621 460 Box
2795 482 Box
2970 513 Box
3144 548 Box
3319 583 Box
3493 625 Box
3668 679 Box
3842 740 Box
4017 798 Box
4191 869 Box
4366 947 Box
4540 1043 Box
4715 1131 Box
4889 1248 Box
5064 1349 Box
5238 1487 Box
5413 1612 Box
5587 1785 Box
5762 1906 Box
5936 2117 Box
6111 2257 Box
6285 2490 Box
6460 2671 Box
6634 2894 Box
6809 3094 Box
6983 3367 Box
2851 4436 Box
% End plot #4
% Begin plot #5
1.000 UP
1.000 UL
LTb
0.94 0.89 0.26 C
LCb setrgbcolor
2604 4316 M
[ [(Helvetica) 120.0 0.0 true true 0 (tile-size = 128x128x128)]
] -40.0 MRshow
/Helvetica findfont 120 scalefont setfont
1.000 UP
1.000 UL
LTb
0.94 0.89 0.26 C
2676 4316 M
351 0 V
1050 384 M
88 1 V
87 0 V
87 1 V
87 2 V
88 1 V
87 2 V
87 2 V
87 3 V
88 3 V
87 2 V
87 3 V
87 4 V
88 6 V
87 9 V
87 8 V
87 9 V
88 8 V
87 12 V
174 24 V
175 29 V
174 34 V
175 36 V
174 46 V
175 54 V
174 57 V
175 64 V
174 73 V
175 79 V
174 97 V
175 84 V
174 108 V
175 118 V
174 133 V
175 150 V
174 153 V
175 128 V
174 174 V
175 176 V
174 265 V
175 146 V
174 221 V
175 228 V
174 257 V
1050 384 BoxF
1138 385 BoxF
1225 385 BoxF
1312 386 BoxF
1399 388 BoxF
1487 389 BoxF
1574 391 BoxF
1661 393 BoxF
1748 396 BoxF
1836 399 BoxF
1923 401 BoxF
2010 404 BoxF
2097 408 BoxF
2185 414 BoxF
2272 423 BoxF
2359 431 BoxF
2446 440 BoxF
2534 448 BoxF
2621 460 BoxF
2795 484 BoxF
2970 513 BoxF
3144 547 BoxF
3319 583 BoxF
3493 629 BoxF
3668 683 BoxF
3842 740 BoxF
4017 804 BoxF
4191 877 BoxF
4366 956 BoxF
4540 1053 BoxF
4715 1137 BoxF
4889 1245 BoxF
5064 1363 BoxF
5238 1496 BoxF
5413 1646 BoxF
5587 1799 BoxF
5762 1927 BoxF
5936 2101 BoxF
6111 2277 BoxF
6285 2542 BoxF
6460 2688 BoxF
6634 2909 BoxF
6809 3137 BoxF
6983 3394 BoxF
2851 4316 BoxF
% End plot #5
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
876 4919 N
876 384 L
6107 0 V
0 4535 V
-6107 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
